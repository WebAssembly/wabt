;;; RUN: %(wasm2wat)s
;;; ARGS: --help
(;; STDOUT ;;;
usage: wasm2wat [options] filename

  Read a file in the WebAssembly binary format, and convert it to
  the WebAssembly text format.

examples:
  # parse binary file test.wasm and write text file test.wast
  $ wasm2wat test.wasm -o test.wat

  # parse test.wasm, write test.wat, but ignore the debug names, if any
  $ wasm2wat test.wasm --no-debug-names -o test.wat

options:
      --help                                   Print this help message
      --version                                Print version information
  -v, --verbose                                Use multiple times for more info
  -o, --output=FILENAME                        Output file for the generated wast file, by default use stdout
  -f, --fold-exprs                             Write folded expressions where possible
      --enable-exceptions                      Enable Experimental exception handling
      --disable-mutable-globals                Disable Import/export mutable globals
      --disable-saturating-float-to-int        Disable Saturating float-to-int operators
      --disable-sign-extension                 Disable Sign-extension operators
      --disable-simd                           Disable SIMD support
      --enable-threads                         Enable Threading support
      --enable-function-references             Enable Typed function references
      --disable-multi-value                    Disable Multi-value
      --enable-tail-call                       Enable Tail-call support
      --disable-bulk-memory                    Disable Bulk-memory operations
      --disable-reference-types                Disable Reference types (externref)
      --enable-annotations                     Enable Custom annotation syntax
      --enable-code-metadata                   Enable Code metadata
      --enable-gc                              Enable Garbage collection
      --enable-memory64                        Enable 64-bit memory
      --enable-multi-memory                    Enable Multi-memory
      --enable-extended-const                  Enable Extended constant expressions
      --enable-relaxed-simd                    Enable Relaxed SIMD
      --enable-custom-page-sizes               Enable Custom page sizes
      --enable-all                             Enable all features
      --inline-exports                         Write all exports inline
      --inline-imports                         Write all imports inline
      --no-debug-names                         Ignore debug names in the binary file
      --ignore-custom-section-errors           Ignore errors in custom sections
      --generate-names                         Give auto-generated names to non-named functions, types, etc.
      --no-check                               Don't check for invalid modules
  -r, --relocatable                            Generate relocation annotations
;;; STDOUT ;;)
